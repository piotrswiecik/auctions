services:

  postgres:
    image: postgres:16-bookworm
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=development
      - POSTGRES_USER=development
      - POSTGRES_DB=auctions
    ports:
      - "5432:5432"
    volumes:
      - auctions_sql_data:/var/lib/postgresql/data
    networks:
      auctions:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      auctions:
  
  mongo:
    image: mongo:7-jammy
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=development
      - MONGO_INITDB_ROOT_PASSWORD=development
    ports:
      - "27017:27017"
    volumes:
      - auctions_mongo_data:/var/lib/mongodb/data
    networks:
      auctions:

  # traefik gateway service with dashboard enabled in dev (insecure mode)
  gateway:
    image: traefik:3.0.3
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TRAEFIK_API_INSECURE=true
      - TRAEFIK_ENTRYPOINTS_HTTPENTRY_ADDRESS=:80
      - TRAEFIK_ENTRYPOINTS_HTTPENTRY_ASDEFAULT=true
      - TRAEFIK_ENTRYPOINTS_HTTPENTRY_HTTP_TLS=false
      - TRAEFIK_ACCESSLOG=true
      - TRAEFIK_PROVIDERS_DOCKER=true
      - TRAEFIK_PROVIDERS_DOCKER_NETWORK=auctions
      - TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=false

  # keycloak identity provider service in dev mode
  idp:
    image: quay.io/keycloak/keycloak:25.0.0
    container_name: keycloak
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=development
      - KEYCLOAK_ADMIN_PASSWORD=development
    ports:
      - "8081:8080"

  auctions-svc:
    build:
      context: auction_svc
      dockerfile: Dockerfile
    container_name: auction-svc
    labels:
      - traefik.http.routers.auctions-svc.rule=Host(`auctions.localhost`)
      - traefik.http.routers.auctions-svc.rule=PathPrefix(`/auctions`)
      - traefik.http.services.auctions-svc.loadbalancer.server.port=8000
      - traefik.enable=true
      - traefik.http.middlewares.add-api-prefix.addprefix.prefix=/api
      - traefik.http.routers.auctions-svc.middlewares=add-api-prefix@docker

  search-svc:
    build:
      context: search_svc
      dockerfile: Dockerfile
    container_name: search-svc
    labels:
      - traefik.http.routers.search-svc.rule=Host(`auctions.localhost`)
      - traefik.http.routers.search-svc.rule=PathPrefix(`/search`)
      - traefik.http.services.search-svc.loadbalancer.server.port=8000
      - traefik.enable=true
      - traefik.http.middlewares.add-api-prefix.addprefix.prefix=/api
      - traefik.http.routers.search-svc.middlewares=add-api-prefix@docker

networks:
  auctions:

volumes:
  auctions_sql_data:
  auctions_mongo_data: